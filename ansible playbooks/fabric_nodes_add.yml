---
- hosts: localhost
  connection: local
  tasks:
# Pull in the variable list section, this includes TWO variable files and gives them a name.  A with_nested section iterates over each of them later
# in the with_nested section it puts the results into a list called 'item'. From the apic_host['APIC'] that is called first in with_nested
# that goes into the list entry item[0] and the vlan_pool['APIC'] goes into item[1]
    - name: include first variables file
      include_vars: 
        file: "ansible variables/fabric_nodes_variables.yml"
        name: fabric_nodes
    - name: include second variables file
      include_vars:
        file: "ansible variables/apic_host_ip_variables.yml"
        name: apic_host
    - name: include third variables file
      include_vars:
        file: "ansible variables/bgp_route_reflectors_variables.yml"
        name: bgp_route_reflectors
        
# Creation of fabric switches section
    - name: Add fabric nodes
      aci_fabric_node:
            host: "{{ item[0]['APIC OOB Address'] }}"
            username: "{{ item[0]['Username'] }}"
            password: "{{ item[0]['Password'] }}"
            serial: "{{ item[1]['Serial Number'] }}"
            node_id: "{{ item[1]['Node ID'] }}"
            switch: "{{ item[1]['Fabric Switch Name'] }}"
            role: "{{ item[1]['Role'] }}"
            validate_certs: False
            state: present
      # the with items will take the variables file which includes a diciontary named APIC
            # the with_nested items will take the variables files and iterate through them
      with_nested: 
        - "{{ apic_host['APIC'] }}"
        - "{{ fabric_nodes['APIC'] }}"
      delegate_to: localhost

# Creation of BGP Internal ASN, this only works for the intial push afterwards you'll get an error saying default as already exists
    - name: Add BGP Route Reflectors
      aci_rest:
            host: "{{ item[0]['APIC OOB Address'] }}"
            username: "{{ item[0]['Username'] }}"
            password: "{{ item[0]['Password'] }}"
            path: /api/node/mo/uni/fabric/bgpInstP-default/as.json
            method: post
            content: {"bgpAsP":
                        {"attributes":
                            {"dn":"uni/fabric/bgpInstP-default/as",
                             "rn":"as","asn":"{{ item[1]['BGP AS'] }}",
                             "status":"created"},
                         "children":[]}
                      }
            validate_certs: False
      # the with items will take the variables file which includes a diciontary named APIC
            # the with_nested items will take the variables files and iterate through them
      with_nested: 
        - "{{ apic_host['APIC'] }}"
        - "{{ bgp_route_reflectors['APIC'] }}"
      ignore_errors: yes
      delegate_to: localhost
      
# Creation of BGP Internal RRs
    - name: Add BGP Route Reflectors
      aci_rest:
            host: "{{ item[0]['APIC OOB Address'] }}"
            username: "{{ item[0]['Username'] }}"
            password: "{{ item[0]['Password'] }}"
            path: /api/node/mo/uni/fabric/bgpInstP-default/rr/node-{{ item[1]['Node ID'] }}.json
            method: post
            content: {"bgpRRNodePEp":
                        {"attributes":
                            {"dn":"uni/fabric/bgpInstP-default/rr/node-{{ item[1]['Node ID'] }}",
                             "id":"{{ item[1]['Node ID'] }}",
                             "rn":"node-{{ item[1]['Node ID'] }}",
                             "status":"created"},
                         "children":[]}
                       }
            validate_certs: False
      # the with items will take the variables file which includes a diciontary named APIC
            # the with_nested items will take the variables files and iterate through them
      with_nested: 
        - "{{ apic_host['APIC'] }}"
        - "{{ bgp_route_reflectors['APIC'] }}"
      ignore_errors: yes
      delegate_to: localhost
      
# Set OOB Mgmt IPs of Fabric Switches
    - name: Add OOB Mgmt IP addresses
      aci_rest:
            host: "{{ item[0]['APIC OOB Address'] }}"
            username: "{{ item[0]['Username'] }}"
            password: "{{ item[0]['Password'] }}"
            path: /api/node/mo/uni/tn-mgmt/mgmtp-default/oob-default/rsooBStNode-[topology/pod-1/node-{{ item[1]['Node ID'] }}].json
            method: post
            content: {"mgmtRsOoBStNode":
                        {"attributes":
                            {"tDn":"topology/pod-1/node-{{ item[1]['Node ID'] }}",
                             "addr":"{{ item[1]['OOB Address'] }}/{{ item[1]['OOB CIDR'] }}",
                             "gw":"{{ item[1]['OOB Gateway'] }}",
                             "status":"created"},
                         "children":[]}
                      }
            validate_certs: False
      # the with items will take the variables file which includes a diciontary named APIC
            # the with_nested items will take the variables files and iterate through them
      with_nested: 
        - "{{ apic_host['APIC'] }}"
        - "{{ fabric_nodes['APIC'] }}"
      ignore_errors: yes
      delegate_to: localhost

